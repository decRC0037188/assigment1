<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAAASUVORK5CYII=
</value>
  </data>
</root>